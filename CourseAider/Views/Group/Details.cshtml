@model CourseAider.Models.Group

@{
    ViewBag.Title = "Details";
}

<section class="ca-bg1">
    @using (Html.BeginContainer())
    {
        using (Html.BeginRow())
        {
            using (Html.BeginColumn(5))
            {
                <h1>@Html.DisplayFor(model => model.Name)</h1>
                <p>
                    @Html.ActionLink("Edit", "Edit", new { id=Model.Id }) |
                    @Html.ActionLink("Back to List", "Index")
                </p>
                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec pretium enim at fringilla tempor. Vestibulum pulvinar in lorem faucibus placerat. Nulla placerat ultrices felis, vitae dignissim turpis convallis posuere. In libero velit, condimentum nec mi id, posuere porta libero. Aenean vestibulum finibus mi.</p>
                <h2>Files</h2>
                <table class="table table-striped table-bordered table-condensed">
                    <thead>
                        <tr>
                            <th>
                                File Name
                            </th>
                            <th>
                                Uploader
                            </th>
                            <th>
                                Visibility
                            </th>
                            <th>
                                
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>Assignment.pdf</td>
                            <td>Teacher</td>
                            <td>Public</td>
                            <td><a href="/">Download</a></td>
                        </tr>
                        <tr>
                            <td>Example Solution.zip</td>
                            <td>Teacher</td>
                            <td>Public</td>
                            <td><a href="/">Download</a></td>
                        </tr>
                        <tr>
                            <td>80443.zip</td>
                            <td>Student 1</td>
                            <td>Private</td>
                            <td><a href="/">Download</a></td>
                        </tr>
                        <tr>
                            <td>80041.pdf</td>
                            <td>Student 2</td>
                            <td>Private</td>
                            <td><a href="/">Download</a></td>
                        </tr>
                    </tbody>
                </table>
            }
            using (Html.BeginColumn(7))
            {
                <div class="well ca-chat">
                    <input type="text" id="message" />
                    <input type="button" id="sendmessage" value="Send" />
                    <input type="hidden" id="displayname" />
                    <ul id="discussion"></ul>
                </div>
                <nav class="navbar navbar-default">
                    <div class="container-fluid">
                    <!-- Collect the nav links, forms, and other content for toggling -->
                    <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
                        <form class="navbar-form navbar-left" role="search">
                        <div class="form-group">
                            <input type="text" class="form-control" placeholder="Message">
                        </div>
                        <button type="submit" class="btn btn-default">Submit</button>
                        </form>
                        <ul class="nav navbar-nav navbar-right">
                        <li><a href="#">Link</a></li>
                        <li class="dropdown">
                            <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false">Dropdown <span class="caret"></span></a>
                            <ul class="dropdown-menu" role="menu">
                            <li><a href="#">Action</a></li>
                            <li><a href="#">Another action</a></li>
                            <li><a href="#">Something else here</a></li>
                            <li class="divider"></li>
                            <li><a href="#">Separated link</a></li>
                            </ul>
                        </li>
                        </ul>
                    </div><!-- /.navbar-collapse -->
                    </div><!-- /.container-fluid -->
                </nav>
            }
        }
    }
</section>



<!-- Button trigger modal -->
<button type="button" class="btn btn-primary btn-lg" data-toggle="modal" data-target="#myModal">
    Launch demo modal
</button>

<!-- Modal -->
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Modal title</h4>
            </div>
            <div class="modal-body">
                ...
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary">Save changes</button>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-1.1.4.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>

        @*
        $(function () {
            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.chatHub;
            // Create a function that the hub can call back to display messages.
            chat.client.addNewMessageToPage = function (name, message, type) {
                // Add the message to the page.
                $('#discussion').append('<li><strong>' + htmlEncode(name)
                    + '</strong>: ' + htmlEncode(message) + '</li>');
            };
            chat.client.promptLogin = function () {

            }
            chat.client.notify = function (text) {
                $('#discussion').append('<li><strong style="color:green">' + text + '</li>');
            }
            chat.client.error = function (errorMessage) {
                $('#discussion').append('<li><strong style="color:red">' + errorMessage + '</li>');
            }
            // Get the user name and store it to prepend to messages.
            $('#displayname').val(prompt('Enter your name:', ''));
            // Set initial focus to message input box.
            $('#message').focus();
            // Start the connection.
            $.connection.hub.start().done(function () {
                $('#sendmessage').click(function () {
                    // Call the Send method on the hub.
                    chat.server.connect($('#displayname').val(), "@Model.IRCChannel");
                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();
                });
            });*@
    });
    // This optional function html-encodes messages for display in the page.
    function htmlEncode(value) {
        var encodedValue = $('<div />').text(value).html();
        return encodedValue;
    }
    </script>
}
